version: '3'

services:

    # The config file is in config/config.yaml
    headscale:
        # image: headscale/headscale:latest
        build:
            context: .
        volumes:
            - ./config:/etc/headscale/
            - ./hs_data/lib:/var/lib/headscale
            - ./hs_data/run:/var/run/headscale
        entrypoint: headscale serve
        ports:
            - "8080:8080"
            - "9090:9090"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9090/metrics"]
            interval: 1m30s
            timeout: 10s
            retries: 3
            start_period: 40s
            start_interval: 5s
        restart: unless-stopped
        # networks:
        #   tart-vpn-nw:

    caddy:
        image: caddy:latest
        container_name: caddy
        restart: unless-stopped
        security_opt:
        - label:disable
        ports:
        - "80:80"
        - "443:443"
        - "443:443/udp"
        volumes:
        - caddy_data:/data
        - caddy_config:/config
        - ./Caddyfile:/etc/caddy/Caddyfile
        - /etc/localtime:/etc/localtime:ro

    # headscale-ui:
    #     image: ghcr.io/gurucomputing/headscale-ui:latest
    #     restart: unless-stopped
    #     container_name: headscale-ui
    #     # ports:
    #     #     - 9443:443
      
    # ## Automatic Proxy which will resolve the VIRTUAL_HOST to the container specified.
    # nginx-proxy:
    #     image: jwilder/nginx-proxy
    #     depends_on:
    #         headscale:
    #             condition: service_healthy
    #     networks:
    #         reverseproxy-nw:
    #     ports:
    #         - "8880:80"
    #     environment:
    #         - DEFAULT_HOST=tart.api
    #         - TRUST_DOWNSTREAM_PROXY=true
    #     volumes:
    #         - /var/run/docker.sock:/tmp/docker.sock:ro


    # signal:
    #     image: jwilder/whoami
    #     expose:
    #     - "8000"
    #     environment:
    #     - VIRTUAL_HOST=tart.api
    #     - VIRTUAL_PORT=8000
    #     - VIRTUAL_PATH=/signal
    # 
    # # curl -H "Host: tart.local" HTTP://localhost:8880/makhanda
    # makhanda:
    #     image: jwilder/whoami
    #     expose:
    #     - "8000"
    #     environment:
    #     - VIRTUAL_HOST=tart.api
    #     - VIRTUAL_PORT=8000
    #     - VIRTUAL_PATH=/makhanda

# docker network create reverseproxy-nw
# networks:
#   reverseproxy-nw:
#     external: true
volumes:
  caddy_data:
    external: true
  caddy_config:
