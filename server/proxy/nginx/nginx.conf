#
#   nginx server config file for a TART telescope Proxying onto the headscale network
#
#
    
proxy_cache_path /cache/main levels=1:2 keys_zone=main_cache:10m max_size=10m inactive=1d use_temp_path=off;
proxy_cache_path /cache/api levels=1:2 keys_zone=api_cache:1m max_size=1m inactive=1d use_temp_path=off;

log_format  proxy_log  '[$time_local] $remote_addr - $remote_user "$host$request_uri" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      ' Proxy: "$proxy_host" "$upstream_addr"/"$tarturl"';
                      
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # set $tailnet platypus-eel.ts.net;
        set $tailnet tart.telescopes.elec.ac.nz;
        
        access_log /dev/stdout proxy_log;
        error_log /dev/stderr;

        root /var/www/html;
        
        index index.html;

        server_name _;

        # Cache the API for 1 minute
        location ~ ^/tart/(?<tartname>[^/]+)/api/(?<apiurl>.*)$ {
            resolver 100.100.100.100;
            set $upstream $tartname.$tailnet:80;

            proxy_pass http://$upstream/api/$apiurl;
        }

        # Cache the other code for 1 hour
        location ~ ^/tart/(?<tartname>[^/]+)/(?<tarturl>.*)$ {
            
            rewrite_log on;
            
            resolver 100.100.100.100;
            set $upstream $tartname.$tailnet:80;
            
            proxy_cache main_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            
            proxy_pass http://$upstream/$tarturl;
        }



        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
            #try_files $uri $uri/ /index.html;
        }
}
