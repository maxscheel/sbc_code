# DO NOT EDIT! This file is auto-generated from JSON schemas.
# To make changes, edit the schema files and regenerate.

# generated by datamodel-codegen:
#   filename:  telescope.json
#   timestamp: 2025-07-12T03:45:05+00:00
#   version:   0.31.2

from __future__ import annotations
from typing import Annotated, Any
from pydantic import BaseModel, ConfigDict, Field, RootModel


class Model(RootModel[Any]):
    root: Any


class Location(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    lon: Annotated[float, Field(ge=-180.0, le=180.0)]
    """
    Longitude
    """
    lat: Annotated[float, Field(ge=-90.0, le=90.0)]
    """
    Latitude
    """
    alt: Annotated[float, Field(ge=0.0, le=8848.0)]
    """
    Altitude in meters above sea level (0 to 8848m - Mt. Everest height)
    """


class TelescopeInfo(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str
    """
    Telescope site name
    """
    operating_frequency: Annotated[float, Field(ge=0.0)]
    """
    Operating frequency of the radio
    """
    l0_frequency: Annotated[float, Field(alias="L0_frequency", ge=0.0)]
    """
    L0 frequency of the radio
    """
    baseband_frequency: Annotated[float, Field(ge=0.0)]
    """
    Baseband frequency of the radio
    """
    sampling_frequency: Annotated[float, Field(ge=0.0)]
    """
    Sampling frequency of the radio
    """
    bandwidth: Annotated[float, Field(ge=0.0)]
    """
    Bandwidth of the radio
    """
    num_antenna: Annotated[int, Field(ge=1)]
    """
    Number of antennas in the telescope
    """
    location: Location


class TelescopeInfoResponse(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    info: TelescopeInfo


class VisibilityData(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    i: Annotated[int, Field(ge=0, le=23)]
    """
    First antenna index
    """
    j: Annotated[int, Field(ge=0, le=23)]
    """
    Second antenna index
    """


class VisibilityResponse(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    data: list[VisibilityData]


class GainCalibration(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    gain: list[float]
    """
    List of channel gains
    """
    phase_offset: list[float]
    """
    List of channel phase offsets in radians
    """


class AntennaPosition(RootModel[list[float]]):
    root: Annotated[list[float], Field(max_length=3, min_length=3)]


class AntennaPositionsCalibration(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    antenna_positions: list[AntennaPosition]
    """
    Array of antenna positions in East-North-Up coordinate system
    """


class FileHandle(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    filename: str
    """
    Filename
    """
    checksum: str
    """
    SHA256 checksum
    """
    timestamp: str
    """
    File timestamp
    """


class DataFileResponse(RootModel[list[FileHandle]]):
    root: list[FileHandle]
