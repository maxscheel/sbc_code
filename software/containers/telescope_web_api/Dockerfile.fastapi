# Build stage
FROM python:3.13 as builder
# Set working directory
WORKDIR /app

RUN pip install uv

# Copy pyproject.toml first for dependency caching
COPY python_code/tart_web_api/tart_api/pyproject.toml ./
RUN uv pip install --system -r pyproject.toml


COPY ./python_code/tart_hardware_interface /python_code/tart_hardware_interface
RUN --mount=type=cache,target=/root/.cache/pip \
    pip3 install /python_code/tart_hardware_interface

RUN find /usr/local/lib/python3.13/site-packages -name 'tests' -type d -exec rm -rf {} +
RUN find /usr/local/lib/python3.13/site-packages -name '*dist-info' -type d -exec rm -rf {} +


# Runtime stage
FROM python:3.13-slim as runtime

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*


ARG SECRET_KEY
ENV SECRET_KEY=$SECRET_KEY
ARG LOGLEVEL=INFO
ENV LOGLEVEL=$LOGLEVEL


# Set environment variables
ENV PYTHONPATH=/app:/app/app
ENV DATA_ROOT=/telescope_data

ENV CONFIG_DIR=/config_data
ENV PERMUTE_DIR=/permute

COPY ./config_data/permute.txt /permute/permute.txt

# Copy the entire tart_api directory structure (includes generated_models now)
COPY python_code/tart_web_api/tart_api/ ./

# COPY --from=builder /app /app

# Copy Python environment from builder
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Expose port
EXPOSE 5000

# Run the application
CMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "5000"]
