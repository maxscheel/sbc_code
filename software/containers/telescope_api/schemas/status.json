{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "StatusFPGAResponse": {
      "type": "object",
      "properties": {
        "hostname": {
          "$ref": "models/common.json#/definitions/Hostname",
          "description": "Hostname of the RPI"
        },
        "timestamp": {
          "$ref": "models/common.json#/definitions/UTCTimestamp",
          "description": "UTC Timestamp"
        },
        "AQ_STREAM": {
          "type": "object",
          "properties": {
            "data": {
              "type": "number",
              "description": "Acquisition data register value"
            }
          },
          "required": ["data"],
          "additionalProperties": false
        },
        "AQ_SYSTEM": {
          "type": "object",
          "properties": {
            "512Mb": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Report flag if firmware is compiled for 512Mb SDRAM"
            },
            "SDRAM_ready": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Report flag for SDRAM"
            },
            "enabled": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Report flag for Acquisition system being enabled"
            },
            "error": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Report flag for Acquisition system error"
            },
            "overflow": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Report flag for Acquisition system overflow"
            },
            "state": {
              "$ref": "models/common.json#/definitions/FPGAStateFlag",
              "description": "Acquisition system state"
            }
          },
          "required": ["512Mb", "SDRAM_ready", "enabled", "error", "overflow", "state"],
          "additionalProperties": false
        },
        "SPI_STATS": {
          "type": "object",
          "properties": {
            "FIFO_overflow": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "FIFO overflow flag"
            },
            "FIFO_underrun": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "FIFO underrun flag"
            },
            "spi_busy": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "SPI busy flag"
            }
          },
          "required": ["FIFO_overflow", "FIFO_underrun", "spi_busy"],
          "additionalProperties": false
        },
        "SYS_STATS": {
          "type": "object",
          "properties": {
            "acq_en": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition Unit enabled"
            },
            "cap_debug": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Capture debug flag"
            },
            "cap_en": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Capture enabled flag"
            },
            "state": {
              "$ref": "models/common.json#/definitions/FPGAStateFlag",
              "description": "System state"
            },
            "viz_en": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Visibility enabled"
            },
            "viz_pend": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Visibility pending"
            }
          },
          "required": ["acq_en", "cap_debug", "cap_en", "state", "viz_en", "viz_pend"],
          "additionalProperties": false
        },
        "TC_CENTRE": {
          "type": "object",
          "properties": {
            "centre": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition centre flag"
            },
            "delay": {
              "type": "number",
              "description": "Delay value"
            },
            "drift": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition drift flag"
            },
            "invert": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition invert flag"
            }
          },
          "required": ["centre", "delay", "drift", "invert"],
          "additionalProperties": false
        },
        "TC_DEBUG": {
          "type": "object",
          "properties": {
            "count": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition count flag"
            },
            "debug": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition debug flag"
            },
            "numantenna": {
              "type": "number",
              "description": "Number of antennas"
            },
            "shift": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "Acquisition shift flag"
            }
          },
          "required": ["count", "debug", "numantenna", "shift"],
          "additionalProperties": false
        },
        "TC_STATUS": {
          "type": "object",
          "properties": {
            "delta": {
              "type": "number",
              "description": "Acquisition delta"
            },
            "phase": {
              "type": "number",
              "description": "Acquisition phase"
            }
          },
          "required": ["delta", "phase"],
          "additionalProperties": false
        },
        "TC_SYSTEM": {
          "type": "object",
          "properties": {
            "enabled": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "TC system enabled flag"
            },
            "error": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "TC system error flag"
            },
            "locked": {
              "$ref": "models/common.json#/definitions/FPGABinaryFlag",
              "description": "TC system locked flag"
            },
            "source": {
              "type": "number",
              "description": "TC system source"
            }
          },
          "required": ["enabled", "error", "locked", "source"],
          "additionalProperties": false
        },
        "VX_DEBUG": {
          "type": "object",
          "properties": {
            "limp": {
              "type": "number",
              "description": "VX debug limp value"
            },
            "stuck": {
              "type": "number",
              "description": "VX debug stuck value"
            }
          },
          "required": ["limp", "stuck"],
          "additionalProperties": false
        },
        "VX_STATUS": {
          "type": "object",
          "properties": {
            "accessed": {
              "type": "number",
              "description": "VX status accessed"
            },
            "available": {
              "type": "number",
              "description": "VX status available"
            },
            "bank": {
              "type": "number",
              "description": "VX status bank"
            },
            "overflow": {
              "type": "number",
              "description": "VX status overflow"
            }
          },
          "required": ["accessed", "available", "bank", "overflow"],
          "additionalProperties": false
        },
        "VX_STREAM": {
          "type": "object",
          "properties": {
            "data": {
              "type": "number",
              "description": "Byte of data"
            }
          },
          "required": ["data"],
          "additionalProperties": false
        },
        "VX_SYSTEM": {
          "type": "object",
          "properties": {
            "blocksize": {
              "type": "number",
              "description": "VX system blocksize"
            },
            "enabled": {
              "type": "number",
              "description": "VX system enabled"
            },
            "overwrite": {
              "type": "number",
              "description": "VX system overwrite"
            }
          },
          "required": ["blocksize", "enabled", "overwrite"],
          "additionalProperties": false
        }
      },
      "required": [
        "hostname",
        "timestamp",
        "AQ_STREAM",
        "AQ_SYSTEM",
        "SPI_STATS",
        "SYS_STATS",
        "TC_CENTRE",
        "TC_DEBUG",
        "TC_STATUS",
        "TC_SYSTEM",
        "VX_DEBUG",
        "VX_STATUS",
        "VX_STREAM",
        "VX_SYSTEM"
      ],
      "additionalProperties": false
    },
    "StatusChannelAllResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "models/common.json#/definitions/ChannelIndex",
            "description": "Channel ID"
          },
          "enabled": {
            "$ref": "models/common.json#/definitions/BinaryFlag",
            "description": "Channel enabled flag"
          },
          "phase": {
            "type": "object",
            "properties": {
              "N_samples": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of samples"
              },
              "measured": {
                "type": "number",
                "description": "Measured phase value"
              },
              "ok": {
                "$ref": "models/common.json#/definitions/BinaryFlag",
                "description": "Phase measurement OK flag"
              },
              "stability": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Phase stability value"
              },
              "threshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Phase threshold value"
              }
            },
            "required": ["N_samples", "measured", "ok", "stability", "threshold"],
            "additionalProperties": false
          },
          "radio_mean": {
            "type": "object",
            "properties": {
              "mean": {
                "type": "number",
                "description": "Radio mean value"
              },
              "ok": {
                "$ref": "models/common.json#/definitions/BinaryFlag",
                "description": "Radio mean OK flag"
              },
              "threshold": {
                "type": "number",
                "minimum": 0,
                "description": "Radio mean threshold"
              }
            },
            "required": ["mean", "ok", "threshold"],
            "additionalProperties": false
          },
          "freq": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Frequency array"
          },
          "power": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Power array"
          }
        },
        "required": ["id", "enabled", "phase", "radio_mean", "freq", "power"],
        "additionalProperties": false
      }
    },
    "StatusChannelSingleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "models/common.json#/definitions/ChannelIndex",
          "description": "Channel ID"
        },
        "enabled": {
          "$ref": "models/common.json#/definitions/BinaryFlag",
          "description": "Channel enabled flag"
        },
        "phase": {
          "type": "object",
          "properties": {
            "N_samples": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of samples"
            },
            "measured": {
              "type": "number",
              "description": "Measured phase value"
            },
            "ok": {
              "$ref": "models/common.json#/definitions/BinaryFlag",
              "description": "Phase measurement OK flag"
            },
            "stability": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Phase stability value"
            },
            "threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Phase threshold value"
            }
          },
          "required": ["N_samples", "measured", "ok", "stability", "threshold"],
          "additionalProperties": false
        },
        "radio_mean": {
          "type": "object",
          "properties": {
            "mean": {
              "type": "number",
              "description": "Radio mean value"
            },
            "ok": {
              "$ref": "models/common.json#/definitions/BinaryFlag",
              "description": "Radio mean OK flag"
            },
            "threshold": {
              "type": "number",
              "minimum": 0,
              "description": "Radio mean threshold"
            }
          },
          "required": ["mean", "ok", "threshold"],
          "additionalProperties": false
        },
        "freq": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Frequency array"
        },
        "power": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Power array"
        }
      },
      "required": ["id", "enabled", "phase", "radio_mean", "freq", "power"],
      "additionalProperties": false
    },
    "EmptyResponse": {
      "type": "object",
      "properties": {},
      "additionalProperties": false
    }
  }
}